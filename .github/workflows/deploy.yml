name: Deploy Application
run-name: ${{ github.actor }} is pushing PR

on:
  push:
    branches:
      - dev

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-image:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USERNAME --password-stdin

      - name: Working with Docker image
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker build -t $DOCKER_USERNAME/react_app_image:latest .
          docker push $DOCKER_USERNAME/react_app_image:latest
          docker image rm $DOCKER_USERNAME/react_app_image:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-image]
    environment: dev

    steps:
      - name: Login AWS EC2 Server
        env:
          PRIVATE_KEY: ${{ secrets.AWS_SERVER_SSH_KEY }}
          HOST_NAME: ${{ secrets.AWS_SERVER_HOST }}
          USER_NAME: ${{ secrets.AWS_SERVER_USER_NAME }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOST_NAME} '
                sh demo.sh
            '

  notify:
    name: Notify PR Created
    runs-on: ubuntu-latest
    needs: [deploy]
    environment: dev

    steps:
      - name: Post Google Chat Message
        run: |
          curl --location --request POST '${{ secrets.GCHAT_WEBHOOK_URL_DEMO }}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
            "cards": [
                  {
                    "header": {
                        "title": "Deployment ðŸš€ðŸš€ðŸš€",
                        "subtitle": "Merged on: #${{ github.ref_name }} Branch"
                  },
                  "sections": [
                        {
                            "widgets": [
                                {
                                    "keyValue": {
                                        "topLabel": "Deployer",
                                        "content": "${{ github.actor }}"
                                    },
                                  },
                                {
                                  "keyValue": {
                                      "topLabel": "Repository Name",
                                      "content": "${{ github.event.repository.name }}"
                                  }
                                },
                                {
                                  "keyValue": {
                                      "topLabel": "Commit",
                                      "content": "${{ github.event.head_commit }}"
                                  }
                                },
                                {
                                  "keyValue": {
                                      "topLabel": "Lets welcome the new changes ",
                                      "content": "Successfully Deployed, Kudos to the entire team for making it happen!ðŸ«¡"
                                  }
                                },
                            ]
                        }
                    ],
                  }
              ]
          }'
